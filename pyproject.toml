[project]
name = "network-researcher"
version = "0.1.0"
description = "Network Researcher using LangChain with OpenAI-compatible models"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "Apache-2.0"}
authors = [
    {name = "OVS/OVN Agent Team", email = "team@example.com"}
]
keywords = ["ovs", "ovn", "networking", "ai", "agent", "langchain", "openai", "mcp"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "langchain>=0.1.0",
    "langchain-openai>=0.0.5",
    "langchain-mcp-adapters>=0.1.9",
    "langchain-community>=0.0.10",
    "aiohttp>=3.8.0",
    "pydantic>=2.0.0",
    "openai>=1.0.0",
    "requests>=2.31.0",
    "python-a2a>=0.5.0",
    "langgraph>=0.6.4",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]

[project.scripts]
network-researcher = "network_researcher:main_sync"
network-researcher-client = "a2a_client_example:main"

[project.urls]
Homepage = "https://github.com/example/ovsdb-mcp"
Documentation = "https://github.com/example/ovsdb-mcp#readme"
Repository = "https://github.com/example/ovsdb-mcp"
Issues = "https://github.com/example/ovsdb-mcp/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["main"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[dependency-groups]
dev = [
    "ruff>=0.12.8",
]
